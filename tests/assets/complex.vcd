$date
   Fri Oct 25 15:30:45 2024
$end
$version
   ModelSim Version 2020.1 (Build 10.9c)
$end
$comment
   Complex VCD file with edge cases for testing parser robustness
$end
$timescale 1ns $end

$scope module testbench $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 # data_bus [31:0] $end
$var wire 16 $ addr_bus [15:0] $end
$var reg 8 % counter [7:0] $end
$var integer 32 & int_signal $end
$var real 64 ' real_signal $end
$var parameter 8 ( PARAM_VAL $end

$scope module cpu $end
$var wire 1 ) cpu_clk $end
$var wire 1 * cpu_reset $end
$var wire 32 + instruction [31:0] $end
$var wire 5 , reg_addr [4:0] $end
$var wire 32 - reg_data [31:0] $end
$var reg 1 . halt $end
$var reg 1 / interrupt $end

$scope module alu $end
$var wire 32 0 operand_a [31:0] $end
$var wire 32 1 operand_b [31:0] $end
$var wire 32 2 result [31:0] $end
$var wire 4 3 op_code [3:0] $end
$var wire 1 4 zero_flag $end
$var wire 1 5 carry_flag $end
$upscope $end

$scope module memory $end
$var wire 1 6 mem_clk $end
$var wire 1 7 mem_enable $end
$var wire 1 8 mem_write $end
$var wire 16 9 mem_addr [15:0] $end
$var wire 32 : mem_data_in [31:0] $end
$var wire 32 ; mem_data_out [31:0] $end
$upscope $end

$upscope $end

$scope module peripherals $end
$var wire 1 < uart_tx $end
$var wire 1 = uart_rx $end
$var wire 8 > uart_data [7:0] $end
$var wire 1 ? spi_clk $end
$var wire 1 @ spi_mosi $end
$var wire 1 A spi_miso $end
$var wire 1 B spi_cs $end
$upscope $end

$upscope $end

$enddefinitions $end

$dumpvars
0!
1"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxxxxxx $
b00000000 %
b00000000000000000000000000000000 &
r0.0 '
b11111111 (
0)
1*
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxx ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -
x.
x/
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 2
bxxxx 3
x4
x5
06
07
08
bxxxxxxxxxxxxxxxx 9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ;
0<
1=
bxxxxxxxx >
0?
0@
1A
1B
$end

#0
1!
0"
b00000000000000000000000000000000 #
b0000000000000000 $
b00000000 %
b00000000000000000000000000000000 &
r0.0 '
1)
0*
b00000000000000000000000000000000 +
b00000 ,
b00000000000000000000000000000000 -
0.
0/
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b0000 3
04
05
16
17
18
b0000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
0<
1=
b00000000 >
0?
0@
1A
1B

#10
0!
b00000001 %
b00000000000000000000000000000001 &
r1.0 '

#20
1!
b00000010 %
b00000000000000000000000000000010 &
r2.0 '

#30
0!
b00000011 %
b00000000000000000000000000000011 &
r3.0 '

#40
1!
b00000100 %
b00000000000000000000000000000100 &
r4.0 '

#50
0!
b00000101 %
b00000000000000000000000000000101 &
r5.0 '

#100
1!
b11111111 %
b00000000000000000000000011111111 &
r255.0 '
1.

#110
0!
b00000000 %
b00000000000000000000000000000000 &
r0.0 '
0.

#120
1!
1/
b10101010 >
1<

#130
0!
0/
b01010101 >
0<

#140
1!
b11110000 >

#150
0!
b00001111 >

#200
1!
b11111111111111111111111111111111 #
bxxxxxxxxxxxxxxxx $
bxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
r-1.0 '

#210
0!

#220
1!

#1000